apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
spec:
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik
      containers:
        - name: traefik
          image: traefik:v3.1
          args:
            - --certificatesresolvers.letsencrypt.acme.storage=/data/acme.json
            - --providers.kubernetescrd # Automatically fetches all the IngressRoute resources in the cluster and proxies them
            - --ping # Enables the ping endpoint for healthchecking Traefik
            - --global.sendanonymoususage=false
            - --api.dashboard=true # Enables the Traefik dashboard
            - --api.insecure=false # Enforces security on the dashboard and requires it to be proxied
            - --log.level=DEBUG
            - --metrics.addinternals=true # Allows more metrics to be seen by Prometheus
            - --entrypoints.web.address=:80
            - --entrypoints.web.forwardedheaders.insecure=false
            - --entrypoints.web.forwardedheaders.trustedips=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,fc00::/7
            - --entrypoints.web.proxyprotocol.insecure=false
            - --entrypoints.web.proxyprotocol.trustedips=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,fc00::/7
            - --entrypoints.web.http.redirections.entrypoint.to=websecure # Redirects HTTP requests to HTTPS
            - --entrypoints.web.http.redirections.entrypoint.scheme=https
            - --entrypoints.websecure.address=:443
            - --entrypoints.websecure.http.tls.certresolver=letsencrypt
            - --entrypoints.websecure.forwardedheaders.insecure=false
            - --entrypoints.websecure.forwardedheaders.trustedips=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,fc00::/7
            - --entrypoints.websecure.proxyprotocol.insecure=false
            - --entrypoints.websecure.proxyprotocol.trustedips=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,fc00::/7
            - --metrics.prometheus.addEntryPointsLabels
            - --metrics.prometheus.addRoutersLabels
            - --metrics.prometheus.addServicesLabels
          env:
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
                  divisor: '1'
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  resource: limits.memory
                  divisor: '1'
          ports:
            - name: web
              containerPort: 80
              protocol: TCP
            - name: websecure
              containerPort: 443
              protocol: TCP
            - name: traefik
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: 8080
          readinessProbe:
            httpGet:
              path: /ping
              port: 8080