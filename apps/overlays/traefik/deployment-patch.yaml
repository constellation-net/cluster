apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
spec:
  template:
    spec:
      priorityClassName: system-cluster-critical
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: node-role.kubernetes.io/master
                  operator: Exists
              - matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: Exists
      containers:
        - name: traefik
          args:
            - --certificatesresolvers.letsencrypt.acme.storage=/data/acme.json
            - --providers.kubernetescrd # Automatically fetches all the IngressRoute resources in the cluster and proxies them
            - --ping # Enables the ping endpoint for healthchecking Traefik
            - --global.sendanonymoususage=false
            - --api.dashboard=true # Enables the Traefik dashboard
            - --api.insecure=false # Enforces security on the dashboard and requires it to be proxied
            - --log.level=DEBUG
            - --metrics.addinternals=true # Allows more metrics to be seen by Prometheus
            - --entrypoints.web.address=:80
            - --entrypoints.web.forwardedheaders.insecure=false
            - --entrypoints.web.forwardedheaders.trustedips=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,fc00::/7
            - --entrypoints.web.proxyprotocol.insecure=false
            - --entrypoints.web.proxyprotocol.trustedips=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,fc00::/7
            - --entrypoints.web.http.redirections.entrypoint.to=websecure # Redirects HTTP requests to HTTPS
            - --entrypoints.web.http.redirections.entrypoint.scheme=https
            - --entrypoints.websecure.address=:443
            - --entrypoints.websecure.http.tls.certresolver=letsencrypt
            - --entrypoints.websecure.http.tls.domains[0].main=starsystem.dev
            - --entrypoints.websecure.http.tls.domains[0].sans=*.starsystem.dev,*.cluster.starsystem.dev
            - --entrypoints.websecure.forwardedheaders.insecure=false
            - --entrypoints.websecure.forwardedheaders.trustedips=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,fc00::/7
            - --entrypoints.websecure.proxyprotocol.insecure=false
            - --entrypoints.websecure.proxyprotocol.trustedips=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,fc00::/7
            - --entrypoints.websecure.http.middlewares=network-system-traefik-cors # Automatically responds to CORS requests for proxied services
            - --certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1,1.0.0.1 # Cloudflare's own DNS servers
            - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
            - --certificatesresolvers.letsencrypt.acme.email=admin@starsystem.dev
            - --entrypoints.ssh.address=:22
            - --entrypoints.dns-tcp.address=:53/tcp
            - --entrypoints.dns-udp.address=:53/udp
            - --entrypoints.ldap.address=:389
            - --entrypoints.satisfactory.address=:7777
            - --entrypoints.minecraft.address=:25565
            - --entrypoints.wireguard.address=:51820/udp
            - --metrics.prometheus.addEntryPointsLabels
            - --metrics.prometheus.addRoutersLabels
            - --metrics.prometheus.addServicesLabels
          envFrom:
            - secretRef:
                name: traefik
          ports:
            - name: web
              containerPort: 80
              protocol: TCP

            - name: websecure
              containerPort: 443
              protocol: TCP

            - name: traefik
              containerPort: 8080
              protocol: TCP

            - name: ssh
              containerPort: 22
              protocol: TCP

            - name: dns-udp
              containerPort: 53
              protocol: UDP

            - name: dns-tcp
              containerPort: 53
              protocol: TCP

            - name: ldap
              containerPort: 389
              protocol: TCP

            - name: satisfactory
              containerPort: 7777
              protocol: TCP

            - name: minecraft
              containerPort: 25565
              protocol: TCP

            - name: wireguard
              containerPort: 51820
              protocol: UDP